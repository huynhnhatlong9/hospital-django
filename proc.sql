USE HOSPITAL;
-- ------- --
-- QUAN LI --
-- ------- --

-- CAU 1
-- (i.1). Xem danh sách bác sĩ trực tại một ca trong một ngày ở một khoa.
DROP PROCEDURE IF EXISTS CAU1;
DELIMITER $$
CREATE PROCEDURE CAU1(IN CA INT, IN NGAY DATE, IN KHOA VARCHAR(30))
BEGIN
    SELECT CONCAT(HO, TEN) AS HOVATEN
    FROM BACSY
             JOIN NHANVIEN N on BACSY.MA_BS = N.MA_NV
             JOIN TGLAMVIEC T on N.MA_NV = T.MA_NV
             JOIN KHOADIEUTRI K on N.MA_KHOA = K.MA_KHOA
    WHERE T.CA_LAM_VIEC = CA
      AND T.NGAY_LAM_VIEC = NGAY
      AND TEN_KHOA = KHOA;
end$$
DELIMITER ;

CALL CAU1(1, '2020-12-04', 'KHOA NOI');

-- CAU 2
-- (i.2). Xem danh sách bác sĩ trực trong một ngày ở một khoa.
DROP PROCEDURE IF EXISTS CAU2;
DELIMITER $$
CREATE PROCEDURE CAU2(IN NGAYLAMVIEC DATE, IN KHOA VARCHAR(30))
BEGIN
    SELECT CONCAT(HO, TEN) AS HOVATEN
    FROM BACSY
             JOIN NHANVIEN N on BACSY.MA_BS = N.MA_NV
             JOIN TGLAMVIEC T on N.MA_NV = T.MA_NV
             JOIN KHOADIEUTRI K on N.MA_KHOA = K.MA_KHOA
    WHERE T.NGAY_LAM_VIEC = NGAYLAMVIEC
      AND TEN_KHOA = KHOA;
END$$
DELIMITER ;

CALL CAU2('2020-12-04', 'KHOA NOI');

-- CAU 3
-- (i.3). Xem danh sách bác sĩ trực tại một ca trong một ngày ở tất cả các khoa.
DROP PROCEDURE IF EXISTS CAU3;
DELIMITER $$
CREATE PROCEDURE CAU3(IN CALAMVIEC INT)
BEGIN
    SELECT CONCAT(HO, TEN) AS HOVATEN
    FROM BACSY
             JOIN NHANVIEN N on BACSY.MA_BS = N.MA_NV
             JOIN TGLAMVIEC T on N.MA_NV = T.MA_NV
    WHERE T.CA_LAM_VIEC = CALAMVIEC;
END$$
DELIMITER ;

CALL CAU3(1);

-- CAU 4
-- (i.4). Xem danh sách bác sĩ trực trong một ngày ở tất cả các khoa.
DROP PROCEDURE IF EXISTS CAU4;
DELIMITER $$
CREATE PROCEDURE CAU4(IN NGAYLAMVIEC DATE)
BEGIN
    SELECT CONCAT(HO, TEN) AS HOVATEN
    FROM BACSY
             JOIN NHANVIEN N on BACSY.MA_BS = N.MA_NV
             JOIN TGLAMVIEC T on N.MA_NV = T.MA_NV
    WHERE T.NGAY_LAM_VIEC = NGAYLAMVIEC;
END$$
DELIMITER ;
CALL CAU4('2020-11-20');

-- CAU 5
-- (i.5). Xem tổng số bệnh nhân tại một ca trong một ngày ở một khoa.

DROP VIEW IF EXISTS KHAMNOI;
CREATE VIEW KHAMNOI AS
SELECT K.MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, TEN_KHOA, B2.*
FROM KBNOITRU
         JOIN KHAMBENH K on KBNOITRU.MA_KHAM = K.MA_KHAM
         JOIN BACSY B on B.MA_BS = KBNOITRU.MA_BS
         JOIN NHANVIEN N on B.MA_BS = N.MA_NV
         JOIN KHOADIEUTRI K2 on N.MA_KHOA = K2.MA_KHOA
         join BENHNHAN B2 on KBNOITRU.MA_BN = B2.MA_BN;
DROP VIEW IF EXISTS KHAMNGOAI;
CREATE VIEW KHAMNGOAI AS
SELECT K.MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, TEN_KHOA, B3.*
FROM KBNGOAITRU
         JOIN KHAMBENH K on KBNGOAITRU.MA_KHAM = K.MA_KHAM
         JOIN BACSY B on B.MA_BS = KBNGOAITRU.MA_BS
         JOIN NHANVIEN N on B.MA_BS = N.MA_NV
         JOIN KHOADIEUTRI K2 on N.MA_KHOA = K2.MA_KHOA
         join BENHNHAN B3 on KBNGOAITRU.MA_BN = B3.MA_BN;
DROP PROCEDURE IF EXISTS CAU5;
DELIMITER $$
CREATE PROCEDURE CAU5(IN CAKHAM INT, IN THOIGIANKHAM date, IN KHOA VARCHAR(30))
BEGIN
    (SELECT MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, MA_BN, HO, TEN
     FROM KHAMNGOAI
     WHERE CA_KHAM = CAKHAM
       AND convert(THOI_GIAN_KHAM, date) = THOIGIANKHAM
       AND TEN_KHOA = KHOA)
    union
    (SELECT MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, MA_BN, HO, TEN
     FROM KHAMNOI
     WHERE CA_KHAM = CAKHAM
       AND convert(THOI_GIAN_KHAM, date) = THOIGIANKHAM
       AND TEN_KHOA = KHOA);
END$$
DELIMITER ;
call CAU5(1, '2020-12-24', 'khoa mắt');
-- CAU 6
-- (i.6). Xem tổng số bệnh nhân nội trú nhập viện trong một ca trong một ngày ở một khoa.
DROP PROCEDURE IF EXISTS CAU6;
DELIMITER $$
CREATE PROCEDURE CAU6(IN CALAMVIEC INT, IN _THOIGIANNHAPVIEN date, IN KHOA VARCHAR(30))
BEGIN
    (SELECT MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, MA_BN, HO, TEN
     FROM KHAMNOI
     WHERE CA_KHAM = CALAMVIEC
       AND convert(THOI_GIAN_KHAM, date) = _THOIGIANNHAPVIEN
       AND TEN_KHOA = KHOA);
END$$
DELIMITER ;
call CAU6(1, '2020-12-24', 'khoa mắt');

-- CAU 7
-- (i.7). Xem tổng số bệnh nhân ngoại trú trong một ca trong một ngày ở một khoa.
DROP PROCEDURE IF EXISTS CAU7;
DELIMITER $$
CREATE PROCEDURE CAU7(IN CAKHAM INT, IN THOIGIANKHAM date, IN KHOA VARCHAR(30))
BEGIN
    (SELECT MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, MA_BN, HO, TEN
     FROM KHAMNGOAI
     WHERE CA_KHAM = CAKHAM
       AND convert(THOI_GIAN_KHAM, date) = THOIGIANKHAM
       AND TEN_KHOA = KHOA);
END$$
DELIMITER ;


-- CAU9
-- (i.9). Xem tổng số bệnh nhân nội trú nhập viện trong một ca trong một ngày ở tất cả các khoa.
DROP PROCEDURE IF EXISTS CAU9;
DELIMITER $$
CREATE PROCEDURE CAU9(IN CALAMVIEC INT, IN _THOIGIANNHAPVIEN date)
BEGIN
    (SELECT MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, MA_BN, HO, TEN
     FROM KHAMNOI
     WHERE CA_KHAM = CALAMVIEC
       AND convert(THOI_GIAN_KHAM, date) = _THOIGIANNHAPVIEN);
END$$
DELIMITER ;

-- CAU 10
-- (i.10). Xem tổng số bệnh nhân ngoại trú trong một ca trong một ngày ở tất cả các khoa.
DROP PROCEDURE IF EXISTS CAU10;
DELIMITER $$
CREATE PROCEDURE CAU10(IN CAKHAM INT, IN THOIGIANKHAM date)
BEGIN
    (SELECT MA_KHAM, CA_KHAM, THOI_GIAN_KHAM, MA_BN, HO, TEN
     FROM KHAMNGOAI
     WHERE CA_KHAM = CAKHAM
       AND convert(THOI_GIAN_KHAM, date) = THOIGIANKHAM);
END$$
DELIMITER ;


DROP VIEW IF EXISTS NGOAIXN;
CREATE VIEW NGOAIXN AS
SELECT MA_XN, TEN_KHOA, THOIGIANXN
FROM XN
         JOIN KHAMBENH K on XN.MA_KHAM = K.MA_KHAM
         JOIN KBNGOAITRU K2 on K.MA_KHAM = K2.MA_KHAM
         JOIN BACSY B on B.MA_BS = K2.MA_BS
         JOIN NHANVIEN N on B.MA_BS = N.MA_NV
         JOIN KHOADIEUTRI K3 on N.MA_KHOA = K3.MA_KHOA;
DROP VIEW IF EXISTS NOIXN;
CREATE VIEW NOIXN AS
SELECT MA_XN, TEN_KHOA, THOIGIANXN
FROM XN
         JOIN KHAMBENH K on XN.MA_KHAM = K.MA_KHAM
         JOIN KBNOITRU K2 on K.MA_KHAM = K2.MA_KHAM
         JOIN BACSY B on B.MA_BS = K2.MA_BS
         JOIN NHANVIEN N on B.MA_BS = N.MA_NV
         JOIN KHOADIEUTRI K3 on N.MA_KHOA = K3.MA_KHOA;
-- CAU11
-- (i.11). Xem tổng số xét nghiệm được làm trong một ngày ở một khoa.
DROP PROCEDURE IF EXISTS CAU11;
DELIMITER $$
CREATE PROCEDURE CAU11(IN NGAYXN DATE, IN KHOA VARCHAR(30))
BEGIN
    (SELECT * FROM NGOAIXN WHERE TEN_KHOA = KHOA AND convert(THOIGIANXN, date) = NGAYXN)
    UNION
    (SELECT * FROM NOIXN WHERE TEN_KHOA = KHOA AND convert(THOIGIANXN, date) = NGAYXN);
END$$
DELIMITER ;
-- CAU12
-- (i.12). Xem tổng số xét nghiệm được làm trong một ngày ở tất cả các khoa.
DROP PROCEDURE IF EXISTS CAU12;
DELIMITER $$
CREATE PROCEDURE CAU12(IN NGAYXN DATE)
BEGIN
        (SELECT * FROM NGOAIXN WHERE convert(THOIGIANXN, date) = NGAYXN)
        UNION
        (SELECT * FROM NOIXN WHERE convert(THOIGIANXN, date) = NGAYXN);
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS QL_INFO;
DELIMITER $$
CREATE PROCEDURE QL_INFO(IN MAQL varchar(20))
BEGIN
    select BS_QUANLY.MA_QL, concat(HO, ' ', TEN) as TEN, NAM_QUAN_LY, LUONG, TEN_KHOA, CA_LAM_VIEC
    from BS_QUANLY
             join NHANVIEN N on BS_QUANLY.MA_QL = N.MA_NV
             join KHOADIEUTRI K on K.MA_KHOA = N.MA_KHOA
    where BS_QUANLY.MA_QL = MAQL;
END$$
DELIMITER ;


-- ------- --
-- BAC SI  --
-- ------- --
-- UTILITY VIEWS
-- NHAP 2 BANG KHAM BENH NOI TRU VA NGOAI TRU LAI VOI NHAU
DROP VIEW IF EXISTS KHAM_BENH_NOI_NGOAI;
CREATE VIEW KHAM_BENH_NOI_NGOAI AS
SELECT *
FROM (SELECT * FROM KBNGOAITRU UNION SELECT * FROM KBNOITRU) AS K;

-- DANH GIA KET QUA CUA CAC CHI SO CUA CAC XET NGHIEM TREN TUNG BENH NHAN
DROP VIEW IF EXISTS KET_QUA_XET_NGHIEM;
CREATE VIEW KET_QUA_XET_NGHIEM AS
SELECT KB.MA_BN,
       KB.MA_BS,
       XN.MA_XN,
       THOIGIANXN,
       GIA_TRI,
       MA_BENH,
       IF(CS.GIA_TRI > CXN.UPPERBOUND OR CS.GIA_TRI < CXN.LOWERBOUND, "bat thuong", "binh thuong") DANH_GIA
FROM KHAM_BENH_NOI_NGOAI AS KB
         JOIN BENHNHAN B ON B.MA_BN = KB.MA_BN
         JOIN KHAMBENH K ON K.MA_KHAM = KB.MA_KHAM
         JOIN KQCHANDOAN C ON K.MA_KHAM = C.MA_KHAM
         JOIN XN ON XN.MA_KHAM = KB.MA_KHAM
         JOIN CHISO CS ON CS.MA_XN = XN.MA_XN
         JOIN CHISOXN CXN ON CXN.MA_CHISOXN = CS.MA_CHISOXN;
SELECT *
FROM KET_QUA_XET_NGHIEM;

-- BS
-- 1
-- (ii.1) CAP NHAT HOAT DONG KHAM/CHUA BENH CHO BENH NHAN NGOAI TRU TRONG MOT CA TRUC
DROP PROCEDURE IF EXISTS BS1;
DELIMITER $$
CREATE PROCEDURE BS1(IN MAKHAM VARCHAR(20),
                     IN TGKHAM DATETIME,
                     IN CAKHAM INT,
                     IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    INSERT INTO KHAMBENH (MA_KHAM, THOI_GIAN_KHAM, CA_KHAM)
    VALUES (MAKHAM, TGKHAM, CAKHAM)
    ON DUPLICATE KEY UPDATE THOI_GIAN_KHAM = TGKHAM,
                            CA_KHAM        = CAKHAM;

    INSERT INTO KBNGOAITRU (MA_KHAM, MA_BS, MA_BN)
    SELECT *
    FROM (SELECT MAKHAM, MABS, MABN) AS TMP
    WHERE NOT EXISTS(SELECT MA_KHAM FROM KBNGOAITRU WHERE MA_KHAM = MAKHAM);
END$$
DELIMITER ;

-- CALL BS1('1', 12/6/2020, 1, '123', '123');

-- 2
-- (ii.2) CAP NHAT HOAT DONG KHAM/CHUA BENH CHO BENH NHAN NOI TRU TRONG MOT CA TRUC
DROP PROCEDURE IF EXISTS BS2;
DELIMITER $$
CREATE PROCEDURE BS2(IN MAKHAM VARCHAR(20),
                     IN TGKHAM DATETIME,
                     IN CAKHAM INT,
                     IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    INSERT INTO KHAMBENH (MA_KHAM, THOI_GIAN_KHAM, CA_KHAM)
    VALUES (MAKHAM, TGKHAM, CAKHAM)
    ON DUPLICATE KEY UPDATE THOI_GIAN_KHAM = TGKHAM,
                            CA_KHAM        = CAKHAM;

    INSERT INTO KBNOITRU (MA_KHAM, MA_BS, MA_BN)
    SELECT *
    FROM (SELECT MAKHAM, MABS, MABN) AS TMP
    WHERE NOT EXISTS(SELECT MA_KHAM FROM KBNOITRU WHERE MA_KHAM = MAKHAM);
END$$
DELIMITER ;

-- CALL BS2('1', 12/6/2020, 1, '123', '123');

-- 3
-- (ii.3) XEM DANH SACH BENH NHAN TRONG MOT NGAY MA MINH DA PHU TRACH
DROP PROCEDURE IF EXISTS BS3;
DELIMITER $$
CREATE PROCEDURE BS3(IN NGAYKHAM DATE,
                     IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM BENHNHAN
    WHERE BENHNHAN.MA_BN IN (SELECT T.MA_BN
                             FROM KHAM_BENH_NOI_NGOAI AS T
                                      JOIN KHAMBENH KB ON T.MA_KHAM = KB.MA_KHAM
                             WHERE (T.MA_BS = MABS AND DATE(KB.THOI_GIAN_KHAM) = NGAYKHAM));
END$$
DELIMITER ;

CALL BS3('2020-11-11', '123');


DROP PROCEDURE IF EXISTS DANHSACHBENHNHAN;
DELIMITER $$
CREATE PROCEDURE DANHSACHBENHNHAN(
    IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM BENHNHAN
             join KHAM_BENH_NOI_NGOAI KBNN on BENHNHAN.MA_BN = KBNN.MA_BN
             join KHAMBENH K on KBNN.MA_KHAM = K.MA_KHAM
    WHERE KBNN.MA_BS = MABS
      and BENHNHAN.MA_BN = KBNN.MA_BN;
END$$
DELIMITER ;
-- 4
-- (ii.4) XEM CAC CHAN DOAN BENH CUA MOT BENH NHAN MA MINH DA PHU TRACH
DROP PROCEDURE IF EXISTS BS4;
DELIMITER $$
CREATE PROCEDURE BS4(IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM KHAMBENH K
             JOIN KQCHANDOAN C ON K.MA_KHAM = C.MA_KHAM
    WHERE K.MA_KHAM IN (SELECT T.MA_KHAM
                        FROM KHAM_BENH_NOI_NGOAI T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;

CALL BS4('123', '123');

-- 5
-- (ii.5) XEM CAC THUOC DUOC DUNG QUA CAC NGAY CUA MOT BENH NHAN NOI TRU MA MINH DA PHU TRACH
DROP PROCEDURE IF EXISTS BS5;
DELIMITER $$
CREATE PROCEDURE BS5(IN NGAY DATE,
                     IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT TEN_THUOC, THOI_GIAN_DUNG
    FROM THUOC T
             JOIN CHEDOTHUOC C ON T.MA_THUOC = C.MA_THUOC
             JOIN KQCHANDOAN KQ ON KQ.MA_CHANDOAN = C.MA_CHANDOAN
             JOIN KHAMBENH K ON KQ.MA_KHAM = K.MA_KHAM
    WHERE C.THOI_GIAN_DUNG = NGAY
      AND K.MA_KHAM IN (SELECT T.MA_KHAM
                        FROM KBNOITRU T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;

CALL BS5('2020-11-11', '123', '123');

-- 6
-- (ii.6) XEM CAC CHI DINH XET NGHIEM DA LAM QUA CAC NGAY CUA MOT BENH NHAN NOI TRU MA MINH DA PHU TRACH
DROP PROCEDURE IF EXISTS BS6;
DELIMITER $$
CREATE PROCEDURE BS6(IN NGAY DATE,
                     IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT MA_XN, TEN_XN
    FROM XN
             JOIN KHAMBENH K ON XN.MA_KHAM = K.MA_KHAM
    WHERE DATE(THOIGIANXN) = NGAY
      AND K.MA_KHAM IN (SELECT T.MA_KHAM
                        FROM KBNOITRU T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;

CALL BS6('2020-11-11', '123', '123');

-- 7
-- (ii.7) XEM CAC CHI DINH CHUP PHIM DA LAM QUA CAC NGAY CUA MOT BENH NHAN NOI TRU MA MINH DA PHU TRACH
DROP PROCEDURE IF EXISTS BS7;
DELIMITER $$
CREATE PROCEDURE BS7(IN NGAY DATE,
                     IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT MA_PHIM, LOAI_PHIM, THOI_GIAN_CHUP, MA_BS, NHAN_XET
    FROM PHIM P
             JOIN KHAMBENH K ON P.MA_KHAM = K.MA_KHAM
    WHERE DATE(P.THOI_GIAN_CHUP) = NGAY
      AND K.MA_KHAM IN (SELECT K.MA_KHAM
                        FROM KBNOITRU T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;

CALL BS7('2020-11-11', '123', '123');

-- 8
-- (ii.8) XEM CAC BENH NHAN CUA CUNG MOT BENH MA MINH DA CHAN DOAN
DROP PROCEDURE IF EXISTS BS8;
DELIMITER $$
CREATE PROCEDURE BS8(IN MABENH VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM BENHNHAN
    WHERE MA_BN IN (SELECT T.MA_BN
                    FROM KHAM_BENH_NOI_NGOAI T
                             JOIN BENHNHAN B ON B.MA_BN = T.MA_BN
                             JOIN KHAMBENH K ON K.MA_KHAM = T.MA_KHAM
                             JOIN KQCHANDOAN C ON K.MA_KHAM = C.MA_KHAM
                    WHERE T.MA_BS = MABS
                      AND MA_BENH = MABENH);
END$$
DELIMITER ;

CALL BS8('123', '123');

-- 9
-- (ii.9) XEM CAC BENH NHAN CO GHI CHU "BAT THUONG" TRONG KET QUA XET NGHIEM CUA CUNG MOT BENH MA MINH DA CHAN DOAN
DROP PROCEDURE IF EXISTS BS9;
DELIMITER $$
CREATE PROCEDURE BS9(IN MABENH VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM BENHNHAN
    WHERE MA_BN IN (SELECT MA_BN
                    FROM KET_QUA_XET_NGHIEM
                    WHERE MA_BENH = MABENH
                      AND MA_BS = MABS
                      AND DANH_GIA = "bat thuong");
END$$
DELIMITER ;

CALL BS9('123', '123');

-- 10
-- (ii.10) XEM CAC BENH NHAN DA XUAT VIEN MA MINH DA PPHU TRACH
DROP PROCEDURE IF EXISTS BS10;
DELIMITER $$
CREATE PROCEDURE BS10(IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM BENHNHAN
    WHERE MA_BN IN (SELECT MA_BN
                    FROM BACSY B
                             JOIN BENHANNOITRU A ON B.MA_BS = A.MA_BS
                    WHERE TG_XV IS NOT NULL
                      AND A.MA_BS = MABS);
END$$
DELIMITER ;

CALL BS10('123');

-- 11
-- (ii.11) XEM CAC BENH NHAN DA XUAT VIEN MA MINH DA PPHU TRACH
DROP PROCEDURE IF EXISTS BS10;
DELIMITER $$
CREATE PROCEDURE BS10(IN MABS VARCHAR(20))
BEGIN
    SELECT *
    FROM BENHNHAN
    WHERE MA_BN IN (SELECT MA_BN
                    FROM BACSY B
                             JOIN BENHANNOITRU A ON B.MA_BS = A.MA_BS
                    WHERE TG_XV IS NOT NULL
                      AND A.MA_BS = MABS);
END$$
DELIMITER ;

CALL BS10('123');

DROP PROCEDURE IF EXISTS LIST_BENH;
DELIMITER $$
CREATE PROCEDURE LIST_BENH()
BEGIN
    SELECT *
    FROM BENH;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS LIST_THUOC;
DELIMITER $$
CREATE PROCEDURE LIST_THUOC()
BEGIN
    SELECT *
    FROM THUOC;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS THEM_BENH;
DELIMITER $$
CREATE PROCEDURE THEM_BENH(IN MABENH_IN VARCHAR(20), IN TENBENH_IN VARCHAR(20), IN MOTA_IN VARCHAR(100))
BEGIN
    insert into BENH values (MABENH_IN, TENBENH_IN, MOTA_IN);
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS THEM_THUOC;
DELIMITER $$
CREATE PROCEDURE THEM_THUOC(IN MATHUOC_IN VARCHAR(20), IN TENTHUOC_IN VARCHAR(30), IN LOAITHUOC_IN VARCHAR(30))
BEGIN
    insert into THUOC values (MATHUOC_IN, TENTHUOC_IN, LOAITHUOC_IN);
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS BACSI_INFO;
DELIMITER $$
CREATE PROCEDURE BACSI_INFO(IN MABS_IN VARCHAR(20))
BEGIN
    select MA_BS, concat(HO, ' ', TEN) as TEN, TEN_KHOA, CHUYEN_KHOA, LUONG, CA_LAM_VIEC, EXPYEAR
    from BACSY
             join NHANVIEN N
                  on N.MA_NV = BACSY.MA_BS
             join KHOADIEUTRI K on K.MA_KHOA = N.MA_KHOA
    where MA_BS = MABS_IN;
END$$
DELIMITER ;


-- ---------- --
-- BENH NHAN  --
-- ---------- --
-- UTIL VIEW
DROP VIEW IF EXISTS KHAMBENHGANNHAT;
CREATE VIEW KHAMBENHGANNHAT AS
SELECT DISTINCT MA_BN, KHAMBENH.MA_KHAM, HOVATEN, THOI_GIAN_KHAM
FROM KHAMBENH
         JOIN ((SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNOITRU
                         JOIN BACSY B2 on KBNOITRU.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)
               UNION
               (SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNGOAITRU
                         JOIN BACSY B2 on KBNGOAITRU.MA_BS = B2.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)) AS B
              ON KHAMBENH.MA_KHAM = B.MA_KHAM
ORDER BY THOI_GIAN_KHAM DESC;

DROP VIEW IF EXISTS CACMAKHAMBENH;
CREATE VIEW CACMAKHAMBENH AS
SELECT DISTINCT MA_BN, KHAMBENH.MA_KHAM, HOVATEN, THOI_GIAN_KHAM
FROM KHAMBENH
         JOIN ((SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNOITRU
                         JOIN BACSY B2 on KBNOITRU.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)
               UNION
               (SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNGOAITRU
                         JOIN BACSY B2 on KBNGOAITRU.MA_BS = B2.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)) AS B
              ON KHAMBENH.MA_KHAM = B.MA_KHAM
ORDER BY THOI_GIAN_KHAM DESC;

-- CAU 1
-- (ii.1) CAP NHAT THONG TIN NHAN KHAU HOC VA THONG TIN BAO HIEM Y TE
DROP PROCEDURE IF EXISTS BN1;
DELIMITER $$
CREATE PROCEDURE BN1(IN MABN VARCHAR(20),
                     IN HO NVARCHAR(20),
                     IN TEN NVARCHAR(20),
                     IN TUOI INT,
                     IN DAN_TOC NVARCHAR(20),
                     IN NGHE_NGHIEP NVARCHAR(30),
                     IN MA_THE VARCHAR(20),
                     IN THOI_HAN DATE,
                     IN NOI_DANG_KY NVARCHAR(30))
BEGIN
    UPDATE BENHNHAN B
    SET B.HO          = IFNULL(NULL, HO),
        B.TEN         = IFNULL(NULL, TEN),
        B.TUOI        = IFNULL(NULL, TUOI),
        B.DAN_TOC     = IFNULL(NULL, DAN_TOC),
        B.NGHE_NGHIEP = IFNULL(NULL, NGHE_NGHIEP)
    WHERE MA_BN = MABN;

    UPDATE BHYT B
    SET B.MA_THE      = MA_THE,
        B.THOI_HAN    = IFNULL(NULL, THOI_HAN),
        B.NOI_DANG_KY = IFNULL(NULL, NOI_DANG_KY)
    WHERE B.BN = MABN;
END$$
DELIMITER ;

CALL BN1('123', NULL, NULL, NULL, NULL, NULL, '456', NULL, NULL);


-- CAU 2
-- (iii.2). Xem danh sách các thuốc mà mình đã dùng trong lần điều trị gần nhất.
DROP PROCEDURE IF EXISTS BN2;
DELIMITER $$
CREATE PROCEDURE BN2(IN MABN VARCHAR(20))
BEGIN
    SELECT TEN_THUOC
    FROM CHEDOTHUOC
             JOIN KQCHANDOAN K on CHEDOTHUOC.MA_CHANDOAN = K.MA_CHANDOAN and CHEDOTHUOC.MA_BENH = K.MA_BENH and
                                  CHEDOTHUOC.MA_KHAM = K.MA_KHAM
             JOIN THUOC T on CHEDOTHUOC.MA_THUOC = T.MA_THUOC
             JOIN KHAMBENHGANNHAT K2 on CHEDOTHUOC.MA_KHAM = K2.MA_KHAM AND K2.MA_BN = MABN
    LIMIT 1;
END$$
DELIMITER ;


-- (iii.3). Xem danh sách các thuốc mà mình đã dùng trong tất cả các lần điều trị.
DROP PROCEDURE IF EXISTS BN3;
DELIMITER $$
CREATE PROCEDURE BN3(IN MABN VARCHAR(20))
BEGIN

    SELECT CHEDOTHUOC.MA_KHAM, T.TEN_THUOC, CHEDOTHUOC.LIEU_DUNG, CHEDOTHUOC.THOI_GIAN_DUNG
    FROM CHEDOTHUOC
             JOIN KQCHANDOAN K on CHEDOTHUOC.MA_CHANDOAN = K.MA_CHANDOAN and CHEDOTHUOC.MA_BENH = K.MA_BENH and
                                  CHEDOTHUOC.MA_KHAM = K.MA_KHAM
             JOIN THUOC T on CHEDOTHUOC.MA_THUOC = T.MA_THUOC
             JOIN CACMAKHAMBENH K2 on CHEDOTHUOC.MA_KHAM = K2.MA_KHAM AND K2.MA_BN = MABN;
END$$
DELIMITER ;


-- (iii.4). Xem kết quả xét nghiệm trong lần điều trị gần nhất.
DROP PROCEDURE IF EXISTS BN4;
DELIMITER $$
CREATE PROCEDURE BN4(IN MABN VARCHAR(20))
BEGIN
    SELECT GIA_TRI
    FROM CHISO
             JOIN XN X on CHISO.MA_XN = X.MA_XN and CHISO.MA_KHAM = X.MA_KHAM
             JOIN KHAMBENHGANNHAT K on CHISO.MA_KHAM = K.MA_KHAM AND K.MA_BN = MABN;
END$$
DELIMITER ;


-- (iii.5). Xem danh sách tất cả các xét nghiệm mà mình đã làm.
DROP PROCEDURE IF EXISTS BN5;
DELIMITER $$
CREATE PROCEDURE BN5(IN MABN VARCHAR(20))
BEGIN
    SELECT TEN_XN
    FROM XN
             JOIN CACMAKHAMBENH C on XN.MA_KHAM = C.MA_KHAM AND MA_BN = MABN;
END$$
DELIMITER ;


-- (iii.6). Xem danh sách tất cả các xét nghiệm có ghi chú “bất thường” của một chỉ số xét nghiệm mà mình đã làm.
DROP PROCEDURE IF EXISTS BN6;
DELIMITER $$
CREATE PROCEDURE BN6(IN MABN VARCHAR(20))
BEGIN
    SELECT GHI_CHU
    FROM CHISO
             JOIN CACMAKHAMBENH C on CHISO.MA_KHAM = C.MA_KHAM AND MA_BN = MABN
    WHERE GHI_CHU = 'BAT THUONG';
END$$
DELIMITER ;


-- (iii.7). Xem danh sách bác sĩ đã điều trị trong lần điều trị gần nhất.
DROP PROCEDURE IF EXISTS BN7;
DELIMITER $$
CREATE PROCEDURE BN7(IN MABN VARCHAR(20))
BEGIN
    SELECT HOVATEN
    FROM KHAMBENHGANNHAT
    WHERE MA_BN = MABN;
END$$
DELIMITER ;


-- (iii.8). Xem danh sách bác sĩ đã điều trị trong tất cả các lần điều trị.
DROP PROCEDURE IF EXISTS BN8;
DELIMITER $$
CREATE PROCEDURE BN8(IN MABN VARCHAR(20))
BEGIN
    SELECT HOVATEN
    FROM CACMAKHAMBENH
    WHERE MA_BN = MABN;
END$$
DELIMITER ;


-- (iii.9). Xem chế độ dinh dưỡng nếu được chỉ định trong lần điều trị gần nhất.
DROP PROCEDURE IF EXISTS BN9;
DELIMITER $$
CREATE PROCEDURE BN9(IN MABN VARCHAR(20))
BEGIN
    SELECT C.NOI_DUNG
    FROM DINHDUONG
             JOIN CDDD C on C.MA_CDDD = DINHDUONG.MA_CDDD
             JOIN KQCHANDOAN K on DINHDUONG.MA_CHANDOAN = K.MA_CHANDOAN and DINHDUONG.MA_BENH = K.MA_BENH and
                                  DINHDUONG.MA_KHAM = K.MA_KHAM
             JOIN KHAMBENHGANNHAT K2 on DINHDUONG.MA_KHAM = K2.MA_KHAM AND MA_BN = MABN;
END$$
DELIMITER ;


-- (iii.10). Xem danh sách chế độ dinh dưỡng nếu được chỉ định trong tất cả các lần điều trị.
DROP PROCEDURE IF EXISTS BN10;
DELIMITER $$
CREATE PROCEDURE BN10(IN MABN VARCHAR(20))
BEGIN
    SELECT DINHDUONG.MA_KHAM, C.NOI_DUNG, C.HUONG_DAN, DINHDUONG.CHI_DINH, DINHDUONG.GHI_CHU
    FROM DINHDUONG
             JOIN CDDD C on C.MA_CDDD = DINHDUONG.MA_CDDD
             JOIN KQCHANDOAN K on DINHDUONG.MA_CHANDOAN = K.MA_CHANDOAN and DINHDUONG.MA_BENH = K.MA_BENH and
                                  DINHDUONG.MA_KHAM = K.MA_KHAM
             JOIN CACMAKHAMBENH K2 on DINHDUONG.MA_KHAM = K2.MA_KHAM AND MA_BN = MABN;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS BN_NHANKHAU_INFO;
DELIMITER $$
CREATE PROCEDURE BN_NHANKHAU_INFO(IN MABN VARCHAR(20))
BEGIN
    select MA_BN, concat(HO, ' ', TEN) as TEN, TUOI, DAN_TOC, NGHE_NGHIEP
    from BENHNHAN
    where MA_BN = MABN;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS BN_BAOHIEM_INFO;
DELIMITER $$
CREATE PROCEDURE BN_BAOHIEM_INFO(IN MABN VARCHAR(20))
BEGIN
    select MA_THE, THOI_HAN, NOI_DANG_KY
    from BHYT
             join BENHNHAN B on B.BHYT = BHYT.MA_THE
    where B.MA_BN = MABN;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS CHECK_NOITRU;
DELIMITER $$
CREATE PROCEDURE CHECK_NOITRU(IN MABN VARCHAR(20))
BEGIN
    select *
    from BENHNHAN
             join NOITRU N on BENHNHAN.MA_BN = N.MA_BN
    where N.MA_BN = MABN;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS BENHNHAN_CAPNHAT;
DELIMITER $$
create
     procedure BENHNHAN_CAPNHAT(IN MABN_IN varchar(20), IN HO_IN varchar(20),
                                                             IN TEN_IN varchar(20), IN TUOI_IN int,
                                                             IN DAN_TOC_IN varchar(20), IN NGHE_NGHIEP_IN varchar(30),
                                                             IN MATHE_IN varchar(20), IN THOI_HAN_IN date,
                                                             IN NOI_DANG_KY_IN varchar(30))
BEGIN
    DECLARE X VARCHAR(20);
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat cap nhat!';
        END;

    START TRANSACTION;

    SET X = (SELECT BHYT FROM BENHNHAN WHERE MA_BN = MABN_IN);

    IF (X IS NULL) THEN
        IF (MATHE_IN IS NOT NULL) THEN
            INSERT INTO BHYT (MA_THE, THOI_HAN, NOI_DANG_KY)
            VALUES (MATHE_IN, THOI_HAN_IN, NOI_DANG_KY_IN);
        END IF;
    ELSE
        IF (MATHE_IN IS NULL) THEN
            DELETE FROM BHYT WHERE MA_THE = X;
        ELSE
            UPDATE BHYT B
            SET B.MA_THE      = MATHE_IN,
                B.THOI_HAN    = THOI_HAN_IN,
                B.NOI_DANG_KY = NOI_DANG_KY_IN
            WHERE B.MA_THE = X;
        END IF;
    END IF;

    -- 	IF (MATHE IS NOT NULL) THEN
-- 		IF NOT EXISTS (SELECT * FROM BHYT WHERE MA_THE = MATHE) THEN
-- 			INSERT INTO BHYT (MA_THE, THOI_HAN, NOI_DANG_KY)
-- 			VALUES (MATHE, THOI_HAN, NOI_DANG_KY);

-- 		ELSEIF (SELECT MA_THE FROM BHYT WHERE BN = MABN) != MATHE THEN
-- 			DELETE FROM BHYT B WHERE B.BN = MABN;

-- 			INSERT INTO BHYT (MA_THE, THOI_HAN, NOI_DANG_KY, BN)
-- 			VALUES (MATHE, THOI_HAN, NOI_DANG_KY, MABN);
-- 		ELSE
-- 			UPDATE BHYT B
-- 			SET B.MA_THE      = MA_THE,
-- 				B.THOI_HAN    = THOI_HAN,
-- 				B.NOI_DANG_KY = NOI_DANG_KY
-- 			WHERE B.BN = MABN;
-- 		END IF;
--     END IF;

    -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'GOES HERE';
    UPDATE BENHNHAN B
    SET B.HO          = HO_IN,
        B.TEN         = TEN_IN,
        B.TUOI        = TUOI_IN,
        B.DAN_TOC     = DAN_TOC_IN,
        B.NGHE_NGHIEP = NGHE_NGHIEP_IN,
        B.BHYT        = MATHE_IN
    WHERE MA_BN = MABN_IN;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS BENHNHAN_DANGKY;
DELIMITER $$
create
     procedure BENHNHAN_DANGKY(IN MABN_IN varchar(20), IN HO_IN varchar(20),
                                                            IN TEN_IN varchar(20), IN TUOI_IN int,
                                                            IN DAN_TOC_IN varchar(20), IN NGHE_NGHIEP_IN varchar(30),
                                                            IN MATHE_IN varchar(20), IN THOI_HAN_IN date,
                                                            IN NOI_DANG_KY_IN varchar(30))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat dang ky!';
        END;

    START TRANSACTION;

    IF (MATHE_IN IS NOT NULL) THEN
        INSERT INTO BHYT (MA_THE, THOI_HAN, NOI_DANG_KY)
        VALUES (MATHE_IN, THOI_HAN_IN, NOI_DANG_KY_IN)
        ON DUPLICATE KEY UPDATE BHYT.THOI_HAN    = THOI_HAN_IN,
                                BHYT.NOI_DANG_KY = NOI_DANG_KY_IN;
    END IF;

    INSERT INTO BENHNHAN (MA_BN, HO, TEN, TUOI, DAN_TOC, NGHE_NGHIEP, BHYT)
    VALUES (MABN_IN, HO_IN, TEN_IN, TUOI_IN, DAN_TOC_IN, NGHE_NGHIEP_IN, MATHE_IN);
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS BN1_BAOHIEM;
DELIMITER $$
create
     procedure BN1_BAOHIEM(IN MABN varchar(20), IN MA_THE varchar(20), IN THOI_HAN date,
                                                        IN NOI_DANG_KY varchar(30))
BEGIN
    UPDATE BHYT B
    SET B.MA_THE      = MA_THE,
        B.THOI_HAN    = IFNULL(NULL, THOI_HAN),
        B.NOI_DANG_KY = IFNULL(NULL, NOI_DANG_KY)
    WHERE B.MA_THE in (select BHYT from BENHNHAN where MA_BN = MABN);
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS BN1_NHANKHAU;
DELIMITER $$
create
     procedure BN1_NHANKHAU(IN MABN varchar(20), IN HO varchar(20), IN TEN varchar(20),
                                                         IN TUOI int, IN DAN_TOC varchar(20),
                                                         IN NGHE_NGHIEP varchar(30))
BEGIN
    UPDATE BENHNHAN B
    SET B.HO          = IFNULL(NULL, HO),
        B.TEN         = IFNULL(NULL, TEN),
        B.TUOI        = IFNULL(NULL, TUOI),
        B.DAN_TOC     = IFNULL(NULL, DAN_TOC),
        B.NGHE_NGHIEP = IFNULL(NULL, NGHE_NGHIEP)
    WHERE MA_BN = MABN;

    #     UPDATE BHYT B
#     SET B.MA_THE      = MA_THE,
#         B.THOI_HAN    = IFNULL(NULL, THOI_HAN),
#         B.NOI_DANG_KY = IFNULL(NULL, NOI_DANG_KY)
#     WHERE B.BN = MABN;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS CHINHSUA_BANT_NV;
DELIMITER $$
create
     procedure CHINHSUA_BANT_NV(IN THOIGIANNHAPVIEN_IN datetime, IN MA_KHOA_IN varchar(20),
                                                             IN MA_BS_IN varchar(20), IN MA_BN_IN varchar(20),
                                                             IN SO_GIUONG_IN int, IN SO_BUONG_IN int)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    INSERT INTO BENHANNOITRU (THOIGIANNHAPVIEN, MA_KHOA, MA_BS, MA_BN, SO_GIUONG, SO_BUONG)
    VALUES (THOIGIANNHAPVIEN_IN, MA_KHOA_IN, MA_BS_IN, MA_BN_IN, SO_GIUONG_IN, SO_BUONG_IN)
    ON DUPLICATE KEY UPDATE BENHANNOITRU.SO_GIUONG = SO_GIUONG_IN,
                            BENHANNOITRU.SO_BUONG  = SO_BUONG_IN;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS CHINHSUA_BANT_XV;
DELIMITER $$
create
     procedure CHINHSUA_BANT_XV(IN MA_KHOA_IN varchar(20), IN MA_BS_IN varchar(20),
                                                             IN MA_BN_IN varchar(20),
                                                             IN MABS_CHIDINH_XUATVIEN_IN varchar(20),
                                                             IN TG_XV_IN datetime, IN TINHTRANG_XV_IN varchar(100),
                                                             IN GHI_CHU_XV_IN varchar(50))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF NOT EXISTS(SELECT *
                  FROM BENHANNOITRU B
                  WHERE B.MA_KHOA = MA_KHOA_IN
                    AND B.MA_BS = MA_BS_IN
                    AND B.MA_BN = MA_BN_IN) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong tim thay benh an!';
    ELSEIF (MABS_CHIDINH_XUATVIEN_IN IS NULL OR TG_XV_IN IS NULL) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Thieu ma bs xuat vien hoac thoi gian xuat vien!';
    ELSE
        UPDATE BENHANNOITRU B
        SET B.MABS_CHIDINH_XUATVIEN = MABS_CHIDINH_XUATVIEN_IN,
            B.TINHTRANG_XV          = TINHTRANG_XV_IN,
            B.TG_XV                 = TG_XV_IN,
            B.GHI_CHU_XV            = GHI_CHU_XV_IN
        WHERE B.MA_KHOA = MA_KHOA_IN
          AND B.MA_BS = MA_BS_IN
          AND B.MA_BN = MA_BN_IN;
    END IF;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS CHINHSUA_CDDD;
DELIMITER $$
create
     procedure CHINHSUA_CDDD(IN MA_CHANDOAN_IN varchar(20), IN MA_BENH_IN varchar(20),
                                                          IN MA_KHAM_IN varchar(20), IN MA_CDDD_IN varchar(20),
                                                          IN CHI_DINH_IN varchar(100), IN GHI_CHU_IN varchar(50))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    INSERT INTO DINHDUONG
    VALUES (MA_CHANDOAN_IN, MA_BENH_IN, MA_KHAM_IN, MA_CDDD_IN, CHI_DINH_IN, GHI_CHU_IN)
    ON DUPLICATE KEY UPDATE DINHDUONG.CHI_DINH = CHI_DINH_IN,
                            DINHDUONG.GHI_CHU  = GHI_CHU_IN;
    COMMIT;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS CHINHSUA_CHISO;
DELIMITER $$
create
     procedure CHINHSUA_CHISO(IN MA_CHISO_IN varchar(20), IN MA_XN_IN varchar(20),
                                                           IN MA_KHAM_IN varchar(20), IN GIA_TRI_IN double,
                                                           IN MA_CHISOXN_IN varchar(20))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF (MA_KHAM_IN IS NULL OR MA_XN_IN IS NULL) THEN
        UPDATE CHISO
        SET CHISO.GIA_TRI    = GIA_TRI_IN,
            CHISO.MA_CHISOXN = MA_CHISOXN_IN
        WHERE CHISO.MA_CHISO = MA_CHISO_IN;
    ELSE
        INSERT INTO CHISO (MA_CHISO, MA_XN, MA_KHAM, GIA_TRI, MA_CHISOXN)
        VALUES (MA_CHISO_IN, MA_XN_IN, MA_KHAM_IN, GIA_TRI_IN, MA_CHISOXN_IN)
        ON DUPLICATE KEY UPDATE CHISO.GIA_TRI    = GIA_TRI_IN,
                                CHISO.MA_CHISOXN = MA_CHISOXN_IN;
    END IF;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS CHINHSUA_KQCHANDOAN;
DELIMITER $$
create
     procedure CHINHSUA_KQCHANDOAN(IN MA_CHANDOAN_IN varchar(20),
                                                                IN MA_BENH_IN varchar(20), IN MA_KHAM_IN varchar(20),
                                                                IN NOI_DUNG_IN varchar(100), IN GHI_CHU_IN varchar(50))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF (MA_KHAM_IN IS NULL OR MA_BENH_IN IS NULL) THEN
        UPDATE KQCHANDOAN
        SET KQCHANDOAN.NOI_DUNG = NOI_DUNG_IN,
            KQCHANDOAN.GHI_CHU  = GHI_CHU_IN
        WHERE KQCHANDOAN.MA_CHANDOAN = MA_CHANDOAN_IN;
    ELSE
        INSERT INTO KQCHANDOAN
        VALUES (MA_CHANDOAN_IN, MA_BENH_IN, MA_KHAM_IN, NOI_DUNG_IN, GHI_CHU_IN)
        ON DUPLICATE KEY UPDATE KQCHANDOAN.NOI_DUNG = NOI_DUNG_IN,
                                KQCHANDOAN.GHI_CHU  = GHI_CHU_IN;
    END IF;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS CHINHSUA_PHIM;
DELIMITER $$
create
     procedure CHINHSUA_PHIM(IN MA_PHIM_IN varchar(20), IN THOI_GIAN_CHUP_IN datetime,
                                                          IN MA_BS_IN varchar(20), IN MA_KHAM_IN varchar(20),
                                                          IN LOAI_PHIM_IN varchar(20), IN NHAN_XET_IN varchar(100))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF (MA_BS_IN IS NULL OR THOI_GIAN_CHUP_IN IS NULL OR MA_KHAM_IN IS NULL) THEN
        UPDATE PHIM P
        SET P.LOAI_PHIM = LOAI_PHIM_IN,
            P.NHAN_XET  = NHAN_XET_IN
        WHERE P.MA_PHIM = MA_PHIM_IN;
    ELSE
        INSERT INTO PHIM
        VALUES (MA_PHIM_IN, MA_KHAM_IN, LOAI_PHIM_IN, THOI_GIAN_CHUP_IN, MA_BS_IN, NHAN_XET_IN)
        ON DUPLICATE KEY UPDATE PHIM.LOAI_PHIM = LOAI_PHIM_IN,
                                PHIM.NHAN_XET  = NHAN_XET_IN;
    END IF;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS CHINHSUA_XN;
DELIMITER $$
create
     procedure CHINHSUA_XN(IN MA_XN_IN varchar(20), IN MA_KHAM_IN varchar(20),
                                                        IN THOIGIANXN_IN datetime, IN TEN_XN_IN varchar(20),
                                                        IN NHAN_XET_IN varchar(100))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF (MA_KHAM_IN IS NULL) THEN
        UPDATE XN
        SET XN.THOIGIANXN = THOIGIANXN_IN,
            XN.TEN_XN     = TEN_XN_IN,
            XN.NHAN_XET   = NHAN_XET_IN
        WHERE XN.MA_XN = MA_XN_IN;
    ELSE
        INSERT INTO XN
        VALUES (MA_XN_IN, MA_KHAM_IN, THOIGIANXN_IN, TEN_XN_IN, NHAN_XET_IN)
        ON DUPLICATE KEY UPDATE XN.THOIGIANXN = THOIGIANXN_IN,
                                XN.TEN_XN     = TEN_XN_IN,
                                XN.NHAN_XET   = NHAN_XET_IN;
    END IF;
    COMMIT;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS THEM_BENHNHAN_NGOAITRU;
DELIMITER $$
create
     procedure THEM_BENHNHAN_NGOAITRU(IN MAKHAM_IN varchar(20), IN TGKHAM_IN datetime,
                                                                   IN CAKHAM_IN int, IN MABN_IN varchar(20),
                                                                   IN MABS_IN varchar(20))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF NOT EXISTS(SELECT * FROM NGOAITRU WHERE MA_BN = MABN_IN) THEN
        INSERT INTO NGOAITRU VALUES (MABN_IN);
    END IF;

    IF NOT EXISTS(SELECT * FROM KHAMBENH WHERE MA_KHAM = MAKHAM_IN) THEN
        INSERT INTO KHAMBENH (MA_KHAM, THOI_GIAN_KHAM, CA_KHAM)
        VALUES (MAKHAM_IN, TGKHAM_IN, CAKHAM_IN);

        INSERT INTO KBNGOAITRU (MA_KHAM, MA_BS, MA_BN)
        VALUES (MAKHAM_IN, MABS_IN, MABN_IN);
    ELSE
        UPDATE KHAMBENH
        SET THOI_GIAN_KHAM = TGKHAM_IN,
            CA_KHAM        = CAKHAM_IN
        WHERE MA_KHAM = MAKHAM_IN;

        -- JUST MAKE SURE
        IF NOT EXISTS(SELECT * FROM KBNGOAITRU WHERE MA_KHAM = MAKHAM_IN) THEN
            INSERT INTO KBNGOAITRU (MA_KHAM, MA_BS, MA_BN)
            VALUES (MAKHAM_IN, MABS_IN, MABN_IN);
        END IF;
    END IF;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS THEM_BENHNHAN_NOITRU;
DELIMITER $$
create
     procedure THEM_BENHNHAN_NOITRU(IN MAKHAM_IN varchar(20), IN TGKHAM_IN datetime,
                                                                 IN CAKHAM_IN int, IN MABN_IN varchar(20),
                                                                 IN MABS_IN varchar(20))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF NOT EXISTS(SELECT * FROM NOITRU WHERE MA_BN = MABN_IN) THEN
        INSERT INTO NOITRU VALUES (MABN_IN);
    END IF;

    IF NOT EXISTS(SELECT * FROM KHAMBENH WHERE MA_KHAM = MAKHAM_IN) THEN
        INSERT INTO KHAMBENH (MA_KHAM, THOI_GIAN_KHAM, CA_KHAM)
        VALUES (MAKHAM_IN, TGKHAM_IN, CAKHAM_IN);

        INSERT INTO KBNOITRU (MA_KHAM, MA_BS, MA_BN)
        VALUES (MAKHAM_IN, MABS_IN, MABN_IN);
    ELSE
        UPDATE KHAMBENH
        SET THOI_GIAN_KHAM = TGKHAM_IN,
            CA_KHAM        = CAKHAM_IN
        WHERE MA_KHAM = MAKHAM_IN;

        -- JUST MAKE SURE
        IF NOT EXISTS(SELECT * FROM KBNOITRU WHERE MA_KHAM = MAKHAM_IN) THEN
            INSERT INTO KBNOITRU (MA_KHAM, MA_BS, MA_BN)
            VALUES (MAKHAM_IN, MABS_IN, MABN_IN);
        END IF;
    END IF;
    COMMIT;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS THEM_CHEDOTHUOC;
DELIMITER $$
create
     procedure THEM_CHEDOTHUOC(IN XOA tinyint(1), IN MA_CHANDOAN_IN varchar(20),
                                                            IN MA_BENH_IN varchar(20), IN MA_KHAM_IN varchar(20),
                                                            IN MA_THUOC_IN varchar(20), IN LIEU_DUNG_IN int,
                                                            IN THOI_GIAN_DUNG_IN datetime)
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF XOA THEN
        DELETE
        FROM CHEDOTHUOC
        WHERE MA_CHANDOAN = MA_CHANDOAN_IN
          AND MA_BENH = MA_BENH_IN
          AND MA_KHAM = MA_KHAM_IN
          AND MA_THUOC = MA_THUOC_IN
          AND LIEU_DUNG = LIEU_DUNG_IN
          AND THOI_GIAN_DUNG = THOI_GIAN_DUNG_IN;
    ELSE
        INSERT INTO CHEDOTHUOC
        VALUES (MA_CHANDOAN_IN, MA_BENH_IN, MA_KHAM_IN, MA_THUOC_IN, LIEU_DUNG_IN, THOI_GIAN_DUNG_IN);
    END IF;
    COMMIT;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS THEM_TRIEUCHUNG;
DELIMITER $$
create
     procedure THEM_TRIEUCHUNG(IN XOA tinyint(1), IN MA_CHANDOAN_IN varchar(20),
                                                            IN MA_BENH_IN varchar(20), IN MA_KHAM_IN varchar(20),
                                                            IN TENTRIEUCHUNG_IN varchar(20), IN MO_TA_IN varchar(30),
                                                            IN MUC_DO_IN varchar(30))
BEGIN
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            ROLLBACK;
            RESIGNAL;
            -- SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Khong the hoan tat them ho so kham benh!';
        END;

    START TRANSACTION;

    IF XOA THEN
        DELETE
        FROM TRIEUCHUNG
        WHERE TENTRIEUCHUNG = TENTRIEUCHUNG_IN
          AND MO_TA = MO_TA_IN
          AND MUC_DO = MUC_DO_IN
          AND MA_CHANDOAN = MA_CHANDOAN_IN
          AND MA_BENH = MA_BENH_IN
          AND MA_KHAM = MA_KHAM_IN;
    ELSE
        INSERT INTO TRIEUCHUNG
        VALUES (TENTRIEUCHUNG_IN, MO_TA_IN, MUC_DO_IN, MA_CHANDOAN_IN, MA_BENH_IN, MA_KHAM_IN);
    END IF;
    COMMIT;
END$$
DELIMITER ;















-- TAO USER QUAN LY
CREATE USER IF NOT EXISTS 'quanly'@'localhost' IDENTIFIED BY 'password';
-- CAP QUYEN CHO QUAN LY
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU1 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU2 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU3 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU4 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU5 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU6 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU7 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU9 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU10 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU11 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CAU12 TO 'quanly'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.QL_INFO TO 'quanly'@'localhost';

-- TAO USER BAS SY
CREATE USER IF NOT EXISTS 'bacsy'@'localhost' IDENTIFIED BY 'password';
-- CAP QUYEN CHO BAC SY
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS1 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS2 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS3 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS4 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS5 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS6 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS7 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS8 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS9 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BS10 TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_BANT_XV TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_CHISO TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.XEM_XN_MAKHAM_MAXN TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.THEM_CHEDOTHUOC TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_KQCHANDOAN TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_PHIM TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_XN TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_BANT_NV TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.THEM_BENHNHAN_NGOAITRU TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.THEM_BENHNHAN_NOITRU TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BENHNHAN_DANGKY TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.DANHSACHBENHNHAN TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.LIST_BENH TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.LIST_THUOC TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.THEM_BENH TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.THEM_THUOC TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BACSI_INFO TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.XEM_XN_MABS TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.XEM_PHIM_MAKHAM TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.XEM_PHIM_MABS TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHINHSUA_CDDD TO 'bacsy'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.THEM_TRIEUCHUNG TO 'bacsy'@'localhost';


REVOKE ALL PRIVILEGES ON `HOSPITAL`.* from 'quanly'@'localhost';
show grants for 'quanly'@'localhost';
-- TAO USER BENH NHAN

-- CAP QUYEN CHO BENH NHAN
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN1 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN1_BAOHIEM TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN1_NHANKHAU TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN2 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN3 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN4 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN5 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN6 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN7 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN8 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN9 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN10 TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN_NHANKHAU_INFO TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BN_BAOHIEM_INFO TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.CHECK_NOITRU TO 'benhnhan'@'localhost';
GRANT EXECUTE ON PROCEDURE HOSPITAL.BENHNHAN_CAPNHAT TO 'benhnhan'@'localhost';

-- trigger rang buoc
DROP TRIGGER IF EXISTS KIEM_TRA_INSERT_NGAY_XUAT_VIEN;
DELIMITER $$
CREATE TRIGGER KIEM_TRA_INSERT_NGAY_XUAT_VIEN
    BEFORE UPDATE
    ON BENHANNOITRU
    FOR EACH ROW
BEGIN
    IF NEW.THOIGIANNHAPVIEN != NULL THEN
        IF NEW.TG_XV <= NEW.THOIGIANNHAPVIEN THEN
            SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'Thoi gian xuat vien phai lon hon thoi gian nhap vien';
        END IF;
    END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS KIEM_TRA_UPDATE_NGAY_XUAT_VIEN;
DELIMITER $$
CREATE TRIGGER KIEM_TRA_UPDATE_NGAY_XUAT_VIEN
    BEFORE UPDATE
    ON BENHANNOITRU
    FOR EACH ROW
BEGIN
    IF NEW.THOIGIANNHAPVIEN != NULL THEN
        IF NEW.TG_XV <= NEW.THOIGIANNHAPVIEN THEN
            SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'Thoi gian xuat vien phai lon hon thoi gian nhap vien';
        END IF;
    ELSE
        IF NEW.TG_XV <= OLD.THOIGIANNHAPVIEN THEN
            SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'Thoi gian xuat vien phai lon hon thoi gian nhap vien';
        END IF;
    END IF;
END$$
DELIMITER ;
CALL THEM_BENHNHAN_NOITRU('NOI6', '2020-12-25 0:0:0', 1, 'BNNOI62', 'BSMUI1');

CALL CHINHSUA_BANT_NV('2020-12-23 1:0:0', 'MAT', 'BSMUI1', 'BN423', 22, 1);
DROP PROCEDURE IF EXISTS BS5;
DELIMITER $$
CREATE PROCEDURE BS5(IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT TEN_THUOC, THOI_GIAN_DUNG
    FROM THUOC T
             JOIN CHEDOTHUOC C ON T.MA_THUOC = C.MA_THUOC
             JOIN KQCHANDOAN KQ ON KQ.MA_CHANDOAN = C.MA_CHANDOAN
             JOIN KHAMBENH K ON KQ.MA_KHAM = K.MA_KHAM
    WHERE K.MA_KHAM IN (SELECT T.MA_KHAM
                        FROM KBNOITRU T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS BS6;
DELIMITER $$
CREATE PROCEDURE BS6(IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT MA_XN, TEN_XN
    FROM XN
             JOIN KHAMBENH K ON XN.MA_KHAM = K.MA_KHAM
    WHERE K.MA_KHAM IN (SELECT T.MA_KHAM
                        FROM KBNOITRU T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;
DROP PROCEDURE IF EXISTS BS7;
DELIMITER $$
CREATE PROCEDURE BS7(IN MABN VARCHAR(20),
                     IN MABS VARCHAR(20))
BEGIN
    SELECT MA_PHIM, LOAI_PHIM, THOI_GIAN_CHUP, MA_BS, NHAN_XET
    FROM PHIM P
             JOIN KHAMBENH K ON P.MA_KHAM = K.MA_KHAM
    WHERE K.MA_KHAM IN (SELECT K.MA_KHAM
                        FROM KBNOITRU T
                        WHERE T.MA_BN = MABN
                          AND T.MA_BS = MABS);
END$$
DELIMITER ;


DROP VIEW IF EXISTS KHAMBENHGANNHAT;
CREATE VIEW KHAMBENHGANNHAT AS
SELECT DISTINCT MA_BN, KHAMBENH.MA_KHAM, HOVATEN, THOI_GIAN_KHAM
FROM KHAMBENH
         JOIN ((SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNOITRU
                         JOIN BACSY B2 on KBNOITRU.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)
               UNION
               (SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNGOAITRU
                         JOIN BACSY B2 on KBNGOAITRU.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)) AS B
              ON KHAMBENH.MA_KHAM = B.MA_KHAM
ORDER BY THOI_GIAN_KHAM DESC
;


DROP VIEW IF EXISTS DANHSACHKHAMBENH;
CREATE VIEW DANHSACHKHAMBENH AS
SELECT MA_BN, KHAMBENH.MA_KHAM, HOVATEN, THOI_GIAN_KHAM
FROM KHAMBENH
         JOIN ((SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNOITRU
                         JOIN BACSY B2 on KBNOITRU.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)
               UNION
               (SELECT MA_KHAM, MA_BN, CONCAT(HO, TEN) AS HOVATEN
                FROM KBNGOAITRU
                         JOIN BACSY B2 on KBNGOAITRU.MA_BS = B2.MA_BS
                         JOIN NHANVIEN N on B2.MA_BS = N.MA_NV)) AS B
              ON KHAMBENH.MA_KHAM = B.MA_KHAM
ORDER BY MA_BN, THOI_GIAN_KHAM DESC;

DROP VIEW IF EXISTS KHAMBENHGANNHAT;
CREATE VIEW KHAMBENHGANNHAT AS
SELECT O.MA_BN, O.MA_KHAM, O.HOVATEN, O.THOI_GIAN_KHAM
FROM DANHSACHKHAMBENH AS O
         LEFT JOIN DANHSACHKHAMBENH AS B
                   ON O.MA_BN = B.MA_BN AND O.THOI_GIAN_KHAM < B.THOI_GIAN_KHAM
WHERE B.THOI_GIAN_KHAM IS NULL;


-- 5
-- (ii.5) XEM CAC THUOC DUOC DUNG QUA CAC NGAY CUA MOT BENH NHAN NOI TRU MA MINH DA PHU TRACH
DROP PROCEDURE IF EXISTS XEM_THUOC;
DELIMITER $$
CREATE PROCEDURE XEM_THUOC(IN MAKHAM_IN VARCHAR(20))
BEGIN
    SELECT *
    FROM THUOC T
             JOIN CHEDOTHUOC C ON T.MA_THUOC = C.MA_THUOC
    WHERE C.MA_KHAM = MAKHAM_IN;
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS XEM_CDDD;
DELIMITER $$
CREATE PROCEDURE XEM_CDDD(IN MAKHAM_IN VARCHAR(20))
BEGIN
    SELECT *
    FROM CDDD T
             JOIN DINHDUONG C ON T.MA_CDDD = C.MA_CDDD
    WHERE C.MA_KHAM = MAKHAM_IN;
END$$
DELIMITER ;


-- XEM XN THEO MA_KHAM
DROP PROCEDURE IF EXISTS XEM_XN_MAKHAM;
DELIMITER $$
CREATE PROCEDURE XEM_XN_MAKHAM(IN MAKHAM_IN VARCHAR(20))
BEGIN
    SELECT *
    FROM XN X
             LEFT JOIN CHISO C ON X.MA_XN = C.MA_XN
    WHERE X.MA_KHAM = MAKHAM_IN;
END$$
DELIMITER ;

-- XEM TOAN BO XN THEO MA_BS
DROP PROCEDURE IF EXISTS XEM_XN_MABS;
DELIMITER $$
CREATE PROCEDURE XEM_XN_MABS(IN MABS_IN VARCHAR(20))
BEGIN
    SELECT *
    FROM XN X
             LEFT JOIN CHISO C ON X.MA_XN = C.MA_XN
    WHERE X.MA_KHAM IN (SELECT MA_KHAM
                        FROM (SELECT * FROM KBNOITRU UNION SELECT * FROM KBNGOAITRU) AS T
                        WHERE MA_BS = MABS_IN);
END$$
DELIMITER ;

-- XEM PHIM THEO MA_KHAM
DROP PROCEDURE IF EXISTS XEM_PHIM_MAKHAM;
DELIMITER $$
CREATE PROCEDURE XEM_PHIM_MAKHAM(IN MAKHAM_IN VARCHAR(20))
BEGIN
    SELECT * FROM PHIM WHERE MA_KHAM = MAKHAM_IN;
END$$
DELIMITER ;

-- XEM TOAN BO PHIM THEO MA_BS
DROP PROCEDURE IF EXISTS XEM_PHIM_MABS;
DELIMITER $$
CREATE PROCEDURE XEM_PHIM_MABS(IN MABS_IN VARCHAR(20))
BEGIN
    SELECT *
    FROM PHIM
    WHERE MA_KHAM IN (SELECT MA_KHAM
                      FROM (SELECT * FROM KBNOITRU UNION SELECT * FROM KBNGOAITRU) AS T
                      WHERE MA_BS = MABS_IN);
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS XEM_XN_MAKHAM_MAXN;
DELIMITER $$
CREATE PROCEDURE XEM_XN_MAKHAM_MAXN(IN MAKHAM_IN VARCHAR(20), IN MAXN_IN VARCHAR(20))
BEGIN
    SELECT *
    FROM XN X
             LEFT JOIN CHISO C ON X.MA_XN = C.MA_XN
    WHERE X.MA_KHAM = MAKHAM_IN
      AND X.MA_XN = MAXN_IN;
END$$
DELIMITER ;





